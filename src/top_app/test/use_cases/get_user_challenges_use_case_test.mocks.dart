// Mocks generated by Mockito 5.4.6 from annotations
// in top_app/test/use_cases/get_user_challenges_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:top_app/modules/home/domain/repository/home_repository.dart'
    as _i2;
import 'package:top_app/shared/models/templates/challenge_model.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [HomeRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeRepository extends _i1.Mock implements _i2.HomeRepository {
  MockHomeRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.ChallengeModel>> getUserChallenges(
          List<String>? challengeIds) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserChallenges,
          [challengeIds],
        ),
        returnValue:
            _i3.Future<List<_i4.ChallengeModel>>.value(<_i4.ChallengeModel>[]),
      ) as _i3.Future<List<_i4.ChallengeModel>>);
}
