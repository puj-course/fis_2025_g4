name: Flutter CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Flutter (3.29.2)
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'

      - name: Get dependencies
        run: cd src/top_app && flutter pub get

      - name: Generate code (build_runner)
        run: cd src/top_app && flutter pub run build_runner build --delete-conflicting-outputs

      - name: Create mock firebase_options.dart
        run: |
          mkdir -p src/top_app/lib
          echo "import 'package:firebase_core/firebase_core.dart';" > src/top_app/lib/firebase_options.dart
          echo "" >> src/top_app/lib/firebase_options.dart
          echo "class DefaultFirebaseOptions {" >> src/top_app/lib/firebase_options.dart
          echo "  static FirebaseOptions get currentPlatform => const FirebaseOptions(" >> src/top_app/lib/firebase_options.dart
          echo "    apiKey: 'mock-api-key'," >> src/top_app/lib/firebase_options.dart
          echo "    appId: 'mock-app-id'," >> src/top_app/lib/firebase_options.dart
          echo "    messagingSenderId: 'mock-sender-id'," >> src/top_app/lib/firebase_options.dart
          echo "    projectId: 'mock-project-id'," >> src/top_app/lib/firebase_options.dart
          echo "    storageBucket: 'mock-storage'," >> src/top_app/lib/firebase_options.dart
          echo "  );" >> src/top_app/lib/firebase_options.dart
          echo "}" >> src/top_app/lib/firebase_options.dart

      - name: Analyze code
        run: cd src/top_app && flutter analyze